#!/bin/bash
# usage: deploy-kubevirt (minikube|minishift|oc_cluster) $KUBEVIRT_VERSION

set -e

source $(dirname $(realpath $0))/defaults

_kubernetes() {
  local VER=$1

  if [[ -n "$USE_OPERATOR" ]];
  then
    kubectl apply -f https://github.com/kubevirt/kubevirt/releases/download/$VER/kubevirt-operator.yaml ;
    kubectl create configmap -n kubevirt kubevirt-config --from-literal debug.useEmulation=true || :
    kubectl apply -f https://github.com/kubevirt/kubevirt/releases/download/$VER/kubevirt-cr.yaml ;
  else
    kubectl apply -f https://github.com/kubevirt/kubevirt/releases/download/$VER/kubevirt.yaml ;
  fi
}

_origin() {
  local VER=$1

  oc login -u system:admin

  if [[ -n "$USE_OPERATOR" ]];
  then
    oc adm policy add-scc-to-group anyuid system:authenticated
    oc adm policy add-scc-to-user privileged -n kubevirt -z kubevirt-operator
  else
    oc adm policy add-scc-to-user privileged -n kubevirt -z kubevirt-privileged
    oc adm policy add-scc-to-user privileged -n kubevirt -z kubevirt-controller
    oc adm policy add-scc-to-user privileged -n kubevirt -z kubevirt-apiserver
  fi

  _kubernetes $VER
}

_${CDIST_ON[${1:-$DEFAULT_PLATFORM}]} ${2:-$DEFAULT_KUBEVIRT_VER}


if [[ -n "$USE_OPERATOR" ]];
then
(
  kubectl wait --timeout=180s --for=condition=Created -n kubevirt kv/kubevirt ;
  kubectl wait --timeout=180s --for=condition=Ready -n kubevirt kv/kubevirt ;
) || {
  echo "Something went wrong"
  kubectl describe -n kubevirt kv/kubevirt
  kubectl describe pods -n kubevirt
  kubectl get scc privileged -o=yaml
  exit 1
}
else
bash ci/wait-pods-ok
fi

# Give kvm some time to be announced
sleep 12

kubectl describe nodes
